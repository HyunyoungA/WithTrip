/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-07-10 13:21:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.chat;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class chat_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1655617123373L));
    _jspx_dependants.put("jar:file:/C:/WithTrip/WithTrip/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>WITHTRIP :: 함께라서 좋은 여행</title>\r\n");
      out.write("<script src=\"resources/js6/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write(" <!-- 아이콘 fontawesome -->\r\n");
      out.write("   <script src=\"https://kit.fontawesome.com/fa40c2d47c.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("   <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/hung1001/font-awesome-pro@4cac1a6/css/all.css\" />\r\n");
      out.write("  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR&family=Raleway&display=swap\" rel=\"stylesheet\"></head>\r\n");
      out.write("<style>\r\n");
      out.write("html{\r\n");
      out.write("   font-family: 'Noto Sans KR', sans-serif;\r\n");
      out.write("   font-family: 'Raleway', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("   /* width 추가함 이상하면 삭제해주세여!*/\r\n");
      out.write("   width: 1050px;   \r\n");
      out.write("   background-color: #F5F5F5;\r\n");
      out.write("   margin-top : 10px;\r\n");
      out.write("   margin-bottom: 50px;\r\n");
      out.write("/*     margin-left: 10px;  */\r\n");
      out.write("   border-radius: 8px;\r\n");
      out.write("   padding:10px;\r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#list {\r\n");
      out.write("   height: 500px;\r\n");
      out.write("   width: 800px;\r\n");
      out.write("   padding: 20px; \r\n");
      out.write("   overflow: auto;\r\n");
      out.write("   background-color: white;\r\n");
      out.write("   margin-left: 100px; \r\n");
      out.write("   border-top-left-radius: 8px;\r\n");
      out.write("   border-top-right-radius: 8px;\r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* #F0F8FF */\r\n");
      out.write(" .bubble { \r\n");
      out.write("    position: relative; \r\n");
      out.write("    background: #00B0FF; \r\n");
      out.write("    border-radius: .4em;\r\n");
      out.write("    display:inline-block;\r\n");
      out.write("    width: 40%; \r\n");
      out.write("    color: white;\r\n");
      out.write("    margin:2px;\r\n");
      out.write(" } \r\n");
      out.write("\r\n");
      out.write(" .bubble:after { \r\n");
      out.write("    content: ''; \r\n");
      out.write("    position: absolute; \r\n");
      out.write("/*     left: 0;  */\r\n");
      out.write("/*     top: 50%;  */\r\n");
      out.write("/*     width: 0px;  */\r\n");
      out.write("/*     height: 0px;  */\r\n");
      out.write("/*     border: 20px solid transparent;  */\r\n");
      out.write("/*     border-right-color: #00B0FF;  */\r\n");
      out.write("/*     border-left: 0;  */\r\n");
      out.write("/*     border-top: 0;  */\r\n");
      out.write("/*     margin-top: -10px;  */\r\n");
      out.write("    margin-left: -20px; \r\n");
      out.write(" } \r\n");
      out.write("#user{\r\n");
      out.write("   border-top: none;\r\n");
      out.write("   border-left: none;\r\n");
      out.write("   border-right: none;\r\n");
      out.write("   border-bottom: none;\r\n");
      out.write("   background-color: #F5F5F5;\r\n");
      out.write("   /*추가 input창 클릭 시 태두리 없애기*/\r\n");
      out.write("   outline: 0;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-control{\r\n");
      out.write("   margin-left: 60px;\r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write(".what{\r\n");
      out.write("   background-color:white;\r\n");
      out.write("   padding:10px;\r\n");
      out.write("/*    margin-top:10px; */\r\n");
      out.write("   margin-left:100px;\r\n");
      out.write("   border-style: solid;\r\n");
      out.write("   border-color: #f2f2f2;\r\n");
      out.write("   border-left:none;\r\n");
      out.write("   border-right:none;\r\n");
      out.write("   border-bottom:none;\r\n");
      out.write("   border-top: none;\r\n");
      out.write("   width:820px;\r\n");
      out.write("   border-bottom-left-radius: 8px;\r\n");
      out.write("   border-bottom-right-radius: 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*추가 7/6 수정 */\r\n");
      out.write("\r\n");
      out.write("#msg {\r\n");
      out.write("   width: 650px;\r\n");
      out.write("   height: 40px;\r\n");
      out.write("   margin-top: 2px;  \r\n");
      out.write("   margin-right: 10px; \r\n");
      out.write("   border: 0;\r\n");
      out.write("   background-color: #f2f2f2;\r\n");
      out.write("   border-radius: 8px;\r\n");
      out.write("   outline: 0;\r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn{\r\n");
      out.write("   height: 30px;\r\n");
      out.write("   width: 85px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#user{\r\n");
      out.write("   height: 35px;\r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 노란색 말풍선(나).. script부분 span에 class you추가함*/\r\n");
      out.write(" .you { \r\n");
      out.write("    position: relative; \r\n");
      out.write("    background: #F7E600; \r\n");
      out.write("    border-radius: .4em;\r\n");
      out.write("    display:inline-block;\r\n");
      out.write("    width: 40%; \r\n");
      out.write("    /*추가*/\r\n");
      out.write("    float: right;\r\n");
      out.write("    margin-left: 90%;\r\n");
      out.write(" } \r\n");
      out.write("\r\n");
      out.write("/* 말풍선 꼬리부분.. 근데 이제 없는 */\r\n");
      out.write("  .you:after {  \r\n");
      out.write("     content: '';  \r\n");
      out.write("     position: absolute;  \r\n");
      out.write("/*     left: 0;  */ \r\n");
      out.write("/*      top: 50%;  */ \r\n");
      out.write("/*      width: 0px;  */ \r\n");
      out.write("/*      height: 0px;  */ \r\n");
      out.write("/*      border: 20px solid transparent;  */ \r\n");
      out.write("/*      border-right-color: #F7E600;  */ \r\n");
      out.write("/*      border-left: 0;  */ \r\n");
      out.write("/*      margin-top: -10px;  */ \r\n");
      out.write("/*      margin-left: -20px;  */ \r\n");
      out.write("/*     margin-left: 350px; */ \r\n");
      out.write("/*     말풍선 꼬리 뒤집기*/ \r\n");
      out.write("     transform: scaleX(-1); \r\n");
      out.write("    \r\n");
      out.write("  }  \r\n");
      out.write("\r\n");
      out.write(".time{\r\n");
      out.write("   font-size:11px;\r\n");
      out.write("   color:#777;\r\n");
      out.write("   padding-left: 90%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*추가 7/6 수정 */\r\n");
      out.write(".col-lg-10{\r\n");
      out.write("   background-color:#F5F5F5;\r\n");
      out.write("   border-radius: 10px;\r\n");
      out.write("   padding:10px;\r\n");
      out.write("   border-left-width: 10px; \r\n");
      out.write("}\r\n");
      out.write(".profile{\r\n");
      out.write("   width:50px; \r\n");
      out.write("   height:50px; \r\n");
      out.write("   border-radius: 50px;\r\n");
      out.write("}\r\n");
      out.write(".btn{\r\n");
      out.write("   height: 30px;\r\n");
      out.write("   width: 85px;\r\n");
      out.write("   color: white;\r\n");
      out.write("   background-color: #6495ED; \r\n");
      out.write("   border: none;\r\n");
      out.write("   border-radius: 5px;\r\n");
      out.write("   transition: background 0.3s ease-in-out;\r\n");
      out.write("   cursor: pointer;\r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn:hover{\r\n");
      out.write("   background-color: black;\r\n");
      out.write("   color: white;\r\n");
      out.write("}\r\n");
      out.write("#to{\r\n");
      out.write("   border-top: none;\r\n");
      out.write("   border-left: none;\r\n");
      out.write("   border-right: none;\r\n");
      out.write("   border-bottom: none;\r\n");
      out.write("   background-color: #F5F5F5;\r\n");
      out.write("   /*추가 input창 클릭 시 태두리 없애기*/\r\n");
      out.write("   outline: 0;\r\n");
      out.write("   font-size: medium;\r\n");
      out.write("   font-weight: bold;\r\n");
      out.write("   width:17%;\r\n");
      out.write("}\r\n");
      out.write("#mainTo{\r\n");
      out.write("   font-size: large;\r\n");
      out.write("   font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#fly{\r\n");
      out.write("   color: gray;\r\n");
      out.write("}\r\n");
      out.write("#fly:hover{\r\n");
      out.write("   color: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nickYou{\r\n");
      out.write("   float: right;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".toYou{\r\n");
      out.write("   font-size: large;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("   \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   \r\n");
      out.write("   <div class=\"container\">\r\n");
      out.write("   <br>\r\n");
      out.write("   &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n");
      out.write("       \r\n");
      out.write("      <span id=\"mainTo\">To. </span>\r\n");
      out.write("        <input type=\"text\" class=\"form-control-col\" id=\"to\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ tboard.nickName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly >\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("            <button type=\"button\" class=\"btn btn-default\" id=\"btnConnect\">대화 시작</button>\r\n");
      out.write("            <button type=\"button\" class=\"btn btn-default\" id=\"btnDisconnect\" disabled onclick=\"btnDisconnect()\">종료</button>\r\n");
      out.write("       \r\n");
      out.write("       <br>\r\n");
      out.write("       <input type=\"hidden\" name=\"user\" id=\"user\" class=\"form-control-col-xs\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.loginUser.nickName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"  >\r\n");
      out.write("       \r\n");
      out.write("         <br><br>\r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("         <div id=\"list\">\r\n");
      out.write("         <br>\r\n");
      out.write("            <div id=\"offset\"></div>\r\n");
      out.write("         </div>\r\n");
      out.write("         \r\n");
      out.write("\r\n");
      out.write("      <div class=\"what\">\r\n");
      out.write("        <div class=\"col-lg-10\">\r\n");
      out.write("          <input type=\"text\" class=\"form-control\"  name=\"msg\" id=\"msg\" placeholder=\"대화 내용을 입력하세요.\" >\r\n");
      out.write("        <i class=\"fa-solid fa-paper-plane\" id=\"fly\" aria-hidden=\"true\"></i>\r\n");
      out.write("        </div>  \r\n");
      out.write("        <br>\r\n");
      out.write("      </div>\r\n");
      out.write("      <br>   \r\n");
      out.write("   </div>\r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("//채팅 서버 주소. 자기꺼로 바꾸고 실행하기\r\n");
      out.write("var url = 'ws://localhost:9680/WithTrip/chatserver';\r\n");
      out.write("         \r\n");
      out.write("//웹 소켓\r\n");
      out.write("var ws;\r\n");
      out.write("\r\n");
      out.write("$('#btnConnect').click(function() {\r\n");
      out.write("\r\n");
      out.write("   // 유저명 확인\r\n");
      out.write("      if ($('#user').val().trim() != ''){\r\n");
      out.write("         // 연결\r\n");
      out.write("         ws = new WebSocket(url);\r\n");
      out.write("               \r\n");
      out.write("         // 소켓 이벤트 매핑\r\n");
      out.write("         ws.onopen = function (evt) {\r\n");
      out.write("            // console.log('서버 연결 성공');\r\n");
      out.write("            print($('#user').val(), '채팅방에 접속하셨습니다.');\r\n");
      out.write("                  \r\n");
      out.write("            // 현재 사용자가 입장했다고 서버에게 통지(유저명 전달)\r\n");
      out.write("            // -> 1#유저명\r\n");
      out.write("         ws.send('1#' + $('#user').val() + '#');\r\n");
      out.write("               \r\n");
      out.write("         $('#user').attr('readonly', true);\r\n");
      out.write("         $('#btnConnect').attr('disabled', true);\r\n");
      out.write("         $('#btnDisconnect').attr('disabled', false);\r\n");
      out.write("         $('#msg').attr('disabled', false);\r\n");
      out.write("         $('#msg').focus();\r\n");
      out.write("      };\r\n");
      out.write("        \r\n");
      out.write("      ws.onmessage = function (evt) {\r\n");
      out.write("         // print('', evt.data);\r\n");
      out.write("         console.log(evt.data);\r\n");
      out.write("//          2#금:ㅎㅇㅎㅇ\r\n");
      out.write("         var index = evt.data.indexOf(\"#\", 2);\r\n");
      out.write("         console.log(index);\r\n");
      out.write("         var no = evt.data.substring(0, 1); \r\n");
      out.write("         var user = evt.data.substring(2, index);\r\n");
      out.write("         var txt = evt.data.substring(index + 1);\r\n");
      out.write("                  \r\n");
      out.write("         if (no == '1') {\r\n");
      out.write("            print2(user);\r\n");
      out.write("         } else if (no == '2') {\r\n");
      out.write("            print(user, txt);\r\n");
      out.write("         } else if (no == '3') {\r\n");
      out.write("            print3(user);\r\n");
      out.write("         }\r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("      };\r\n");
      out.write("               \r\n");
      out.write("      ws.onclose = function (evt) {\r\n");
      out.write("         console.log('소켓이 닫힙니다.');\r\n");
      out.write("           };\r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("      ws.onerror = function (evt) {\r\n");
      out.write("         console.log(evt.data);\r\n");
      out.write("      };\r\n");
      out.write("   } else {\r\n");
      out.write("      alert('닉네임을 입력하세요.');\r\n");
      out.write("      $('#user').focus();\r\n");
      out.write("   }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("// 메세지 전송 및 아이디\r\n");
      out.write("function print(user, txt) {\r\n");
      out.write("   \r\n");
      out.write("   var cur_session = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.nickName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\r\n");
      out.write("//    console.log(cur_session);\r\n");
      out.write("//    console.log(user);\r\n");
      out.write("   \r\n");
      out.write("   if(user == cur_session){\r\n");
      out.write("      \r\n");
      out.write("   var temp = '';\r\n");
      out.write("   temp += '<div style=\"float:left; padding:10px;\"><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/profileUploadFiles/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.changeName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" class=\"profile\"></div>';\r\n");
      out.write("   temp += user;\r\n");
      out.write("   temp +='<br>';\r\n");
      out.write("   temp += '<span class=\"bubble\">';\r\n");
      out.write("   temp += '<br>';\r\n");
      out.write("   temp += '&emsp;';\r\n");
      out.write("   temp += txt;\r\n");
      out.write("   temp += '<br><br>';\r\n");
      out.write("   temp += '</span>';\r\n");
      out.write("   temp += '<br>';\r\n");
      out.write("   temp += ' <span style=\"font-size:11px;color:#777; margin-left:70px;\">' + new Date().toLocaleTimeString() + '</span>';\r\n");
      out.write("   temp += '<br><br>';      \r\n");
      out.write("   $('#list').append(temp);\r\n");
      out.write("   \r\n");
      out.write("   }else{\r\n");
      out.write("      \r\n");
      out.write("      var temp = '';\r\n");
      out.write("      \r\n");
      out.write("      temp +='<br>';\r\n");
      out.write("      temp += '<span class=\"nickYou\">' + user + '</span><br>';\r\n");
      out.write("      temp += '<span class=\"you\" style=\"float: right;\">';\r\n");
      out.write("      temp += '<br>';\r\n");
      out.write("      temp += '&emsp;';\r\n");
      out.write("      temp +=  txt;\r\n");
      out.write("      temp += '&emsp;';\r\n");
      out.write("      temp += '<br><br>';\r\n");
      out.write("      temp += '</span>';\r\n");
      out.write("      temp += '<br>';\r\n");
      out.write("      temp += ' <span style=\"font-size:11px;color:#777; padding-left: 90%;\">' + new Date().toLocaleTimeString() + '</span>';\r\n");
      out.write("      temp += '<br>';      \r\n");
      out.write("      $('#list').append(temp);\r\n");
      out.write("         \r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   var off = $('#list span').last().offset();\r\n");
      out.write("   console.log(off);\r\n");
      out.write("   $('#list').stop().animate({scrollTop : $('#list')[0].scrollHeight}, 1000);\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write("      \r\n");
      out.write("// 다른 client 접속      \r\n");
      out.write("function print2(user) {\r\n");
      out.write("   let temp = '';\r\n");
      out.write("   temp += '<div style=\"margin-bottom:3px;\">';\r\n");
      out.write("   temp += \"'\" + user + \"' 님이 접속했습니다.\" ;\r\n");
      out.write("   temp += ' <span style=\"font-size:11px;color:#777;\">' + new Date().toLocaleTimeString() + '</span>';\r\n");
      out.write("   temp += '</div>';\r\n");
      out.write("         \r\n");
      out.write("   $('#list').append(temp);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// client 접속 종료\r\n");
      out.write("function print3(user) {\r\n");
      out.write("   let temp = '';\r\n");
      out.write("   temp += '<div style=\"margin-bottom:3px;\">';\r\n");
      out.write("   temp += \"'\" + user + \"' 님이 종료했습니다.\" ;\r\n");
      out.write("   temp += ' <span style=\"font-size:11px;color:#777;\">' + new Date().toLocaleTimeString() + '</span>';\r\n");
      out.write("   temp += '</div>';\r\n");
      out.write("         \r\n");
      out.write("   $('#list').append(temp);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$('#user').keydown(function() {\r\n");
      out.write("   if (event.keyCode == 13) {\r\n");
      out.write("      $('#btnConnect').click();\r\n");
      out.write("   }\r\n");
      out.write("});\r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("$('#msg').keydown(function() {\r\n");
      out.write("   if (event.keyCode == 13) {\r\n");
      out.write("      \r\n");
      out.write("      //서버에게 메시지 전달\r\n");
      out.write("      //2#유저명#메시지\r\n");
      out.write("      ws.send('2#' + $('#user').val() + '#' + $(this).val()); //서버에게\r\n");
      out.write("      print($('#user').val(), $(this).val()); //본인 대화창에\r\n");
      out.write("      \r\n");
      out.write("        $('#msg').val('');\r\n");
      out.write("      $('#msg').focus();\r\n");
      out.write("      $('#fly').css('color', 'black');\r\n");
      out.write("            \r\n");
      out.write("   }\r\n");
      out.write("});\r\n");
      out.write("      \r\n");
      out.write("$('#btnDisconnect').click(function() {\r\n");
      out.write("   ws.send('3#' + $('#user').val() + '#');\r\n");
      out.write("   ws.close();\r\n");
      out.write("         \r\n");
      out.write("   $('#user').attr('readonly', false);\r\n");
      out.write("//     $('#user').val('');\r\n");
      out.write("         \r\n");
      out.write("   $('#btnConnect').attr('disabled', false);\r\n");
      out.write("   $('#btnDisconnect').attr('disabled', true);\r\n");
      out.write("         \r\n");
      out.write("//    $('#msg').val('');\r\n");
      out.write("   $('#msg').attr('disabled', true);\r\n");
      out.write("   $('#fly').css('color', 'gray');\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/* 종료버튼 클릭 시 winodw.open 창 닫기*/\r\n");
      out.write("function btnDisconnect(){\r\n");
      out.write("	window.close();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
