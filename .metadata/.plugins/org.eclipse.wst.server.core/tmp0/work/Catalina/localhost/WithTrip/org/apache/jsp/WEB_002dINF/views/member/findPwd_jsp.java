/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-07-11 06:20:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class findPwd_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1655617123373L));
    _jspx_dependants.put("jar:file:/C:/WithTrip/WithTrip/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>WITHTRIP :: 함께라서 좋은 여행</title>\r\n");
      out.write("	<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<!-- <link href=\"../../css/findPwd.css\" rel=\"stylesheet\"> -->\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR&family=Raleway&display=swap\" rel=\"stylesheet\"></head>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("	html{\r\n");
      out.write("	font-family: 'Noto Sans KR', sans-serif;\r\n");
      out.write("	font-family: 'Raleway', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".find-password-page{\r\n");
      out.write("  width:550px;\r\n");
      out.write("  text-align:center;\r\n");
      out.write("  overflow-x:hidden;\r\n");
      out.write("  margin:11% auto;\r\n");
      out.write("  background-color:#f9f9f9;\r\n");
      out.write("  vertical-align: middle;\r\n");
      out.write("  border-radius : 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".find-password-header {\r\n");
      out.write("  text-align:left;\r\n");
      out.write("  margin:60px 75px 0 75px;\r\n");
      out.write("  padding-bottom:10px;\r\n");
      out.write("  font-size:16pt;\r\n");
      out.write("  border-bottom:3px solid #6495ED;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".find-password-content {\r\n");
      out.write("  margin:30px 0 20px 85px;\r\n");
      out.write("  text-align:left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".find-password-div {\r\n");
      out.write("  margin-bottom:15px;\r\n");
      out.write("  font-size: small;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".find-password-div span {\r\n");
      out.write("  font-size:14pt;\r\n");
      out.write("  color:#6495ED;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".find-password-content input[type=email] {\r\n");
      out.write("  width:380px;\r\n");
      out.write("  margin-top:5px;\r\n");
      out.write("  margin-bottom:5px;\r\n");
      out.write("  font-size:14pt;\r\n");
      out.write("  padding-left:10px;\r\n");
      out.write("  color:#666666;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".find-password-content input[type=text] {\r\n");
      out.write("  width:380px;\r\n");
      out.write("  margin-top:5px;\r\n");
      out.write("  margin-bottom:5px;\r\n");
      out.write("  font-size:14pt;\r\n");
      out.write("  padding-left:10px;\r\n");
      out.write("  color:#666666;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".find-password-button {\r\n");
      out.write("  padding-bottom:50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".find-password-button button {\r\n");
      out.write("  height:33px;\r\n");
      out.write("  background-color: #6495ED;\r\n");
      out.write("  border:none;\r\n");
      out.write("  color:white;\r\n");
      out.write("  padding-left:15px;\r\n");
      out.write("  padding-right:15px;\r\n");
      out.write("  text-align:center;\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("  display: inline-block;\r\n");
      out.write("  cursor:pointer;\r\n");
      out.write("  border-radius: 10px;\r\n");
      out.write("  transition: background 0.3s ease-in-out;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".find-password-button button:hover{\r\n");
      out.write("	background: #000000;\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".text{\r\n");
      out.write("\r\n");
      out.write(" font-size: 10px;\r\n");
      out.write("  width: 500px;\r\n");
      out.write("  height: 32px;\r\n");
      out.write("  border: 0;\r\n");
      out.write("  border-radius: 13px;\r\n");
      out.write("  outline: none;\r\n");
      out.write("  padding-left: 10px;\r\n");
      out.write("  background-color: white;\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* .text:focus { */\r\n");
      out.write("/*     outline: none !important; */\r\n");
      out.write("/*     border:1px solid ; */\r\n");
      out.write("/*     box-shadow: 0 0 8px #6495ED; */\r\n");
      out.write("/*     border-color: white; */\r\n");
      out.write("/* } */\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("/* #mail_check_input_box_false{ */\r\n");
      out.write("/*     background-color:#ebebe4; */\r\n");
      out.write("/* } */\r\n");
      out.write(" \r\n");
      out.write("/* #mail_check_input_box_true{ */\r\n");
      out.write("/*     background-color:white; */\r\n");
      out.write("/* } */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("/* .correct{ */\r\n");
      out.write("/*     color : green; */\r\n");
      out.write("/* } */\r\n");
      out.write("/* .incorrect{ */\r\n");
      out.write("/*     color : red; */\r\n");
      out.write("/* } */\r\n");
      out.write(" \r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"find-password-page\" ng-controller=\"FindIdCtrl as findIdCtrl\">\r\n");
      out.write("    <div class=\"find-password-header\">임시비밀번호 전송</div>\r\n");
      out.write("    <div class=\"find-password-content\">\r\n");
      out.write("        <div class=\"find-password-div\">등록하신 <span>E-Mail</span> 주소를 입력하세요.</div>\r\n");
      out.write("        <div><input type=\"text\" name=\"myEmail\" class=\"text\" id=\"myEmail\" style=\"font-size: 13px;\" placeholder=\"example@withtrip.com\"></div>\r\n");
      out.write("        \r\n");
      out.write("<!--         <div class=\"mail_check_input_box\"> -->\r\n");
      out.write("<!--         <input type=\"text\" class=\"text\" id=\"checkNum\"style=\"font-size: 13px;\" placeholder=\"인증번호를 입력해주세요.\" > -->\r\n");
      out.write("<!--         <br> -->\r\n");
      out.write("<!--         <span id=\"mail_check_input_box_warn\"></span> -->\r\n");
      out.write("<!--         </div> -->\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"find-password-button\">\r\n");
      out.write("    	<button type=\"button\" id=\"btn\" >찾기</button>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("\r\n");
      out.write("	var code = \"\";   \r\n");
      out.write("	\r\n");
      out.write("	// 이메일이 자기 이메일인지 먼저 확인해야한다.\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("		$(\"#btn\").click(function(){\r\n");
      out.write("			var email = $('#myEmail').val();\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: \"GET\",\r\n");
      out.write("				url:\"checkPwd.me\",\r\n");
      out.write("				data: {myEmail: email},\r\n");
      out.write("\r\n");
      out.write("		        success:function(data){\r\n");
      out.write("		        	console.log(data)\r\n");
      out.write("		        	if(data == '1'){\r\n");
      out.write("						alert(\"해당 이메일로 임시 비밀번호가 발급되었습니다.\");\r\n");
      out.write("			        	code = data;\r\n");
      out.write("		        		\r\n");
      out.write("		        	}else{\r\n");
      out.write("		        		alert(\"이메일을 확인해주세요.\");\r\n");
      out.write("		        	}\r\n");
      out.write("\r\n");
      out.write("		        },\r\n");
      out.write("		        error:function(data){\r\n");
      out.write("		        	console.log(data)\r\n");
      out.write("		        }\r\n");
      out.write("\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
