/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-07-14 06:00:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1655617123373L));
    _jspx_dependants.put("jar:file:/C:/WithTrip/WithTrip/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<title>WITHTRIP :: 함께라서 좋은 여행</title>\r\n");
      out.write("<script src=\"resources/js6/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<link href=\"resources/css6/login.css\" rel=\"stylesheet\">\r\n");
      out.write("<!-- <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"> -->\r\n");
      out.write("<!-- <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin> -->\r\n");
      out.write("<!-- <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR&family=Raleway&display=swap\" rel=\"stylesheet\"> -->\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body id=\"loginPage\" style=\"background-color: #ededed; background-image:url('resources/images1/5.jpg')\">\r\n");
      out.write("<!-- header -->\r\n");
      if (_jspx_meth_c_005fimport_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<br><br>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"cont\">\r\n");
      out.write("<!-- 	 	<form action=\"login.me\" method=\"post\"> -->\r\n");
      out.write("	  <div class=\"form sign-in\">\r\n");
      out.write("	  <span class=\"main\">로그인</span>	 \r\n");
      out.write("	    <p class=\"p\">\r\n");
      out.write("	        <input type=\"text\" name=\"email\" autocomplete=\"off\" required id=\"email1\" >\r\n");
      out.write("	        <label for=\"user_id\"><span>Email</span>\r\n");
      out.write("	        </label>\r\n");
      out.write("      	</p>\r\n");
      out.write("      	\r\n");
      out.write("		<p class=\"p\">\r\n");
      out.write("	        <input type=\"password\" name=\"userPwd\" autocomplete=\"off\" required id=\"userPwd\">\r\n");
      out.write("	        <label for=\"user_pwd\"><span>Password</span></label>\r\n");
      out.write("	    </p>\r\n");
      out.write("	    \r\n");
      out.write("<!-- 	    <button type=\"submit\" class=\"submit\" style=\"font-size:small;background: rgb(140,175,242);  -->\r\n");
      out.write("<!-- background: linear-gradient(270deg, rgba(140,175,242,1) 15%, rgba(126,169,242,1) 38%, rgba(110,156,236,1) 61%);\" id=\"loginBtn\" ><span>로그인<br></span></button> -->\r\n");
      out.write("	        <button onclick=\"login();\" type=\"button\" class=\"submit\" style=\"font-size:small;background: rgb(140,175,242);  -->\r\n");
      out.write(" background: linear-gradient(270deg, rgba(140,175,242,1) 15%, rgba(126,169,242,1) 38%, rgba(110,156,236,1) 61%);\" id=\"loginBtn\" ><span>로그인<br></span></button> \r\n");
      out.write("	       \r\n");
      out.write("	    <div class=\"find_btn_cont\">\r\n");
      out.write("		    <div class=\"find_btn\"><button type=\"button\" class=\"forgot\" id=\"Ifind\" target=\"_self\" style=\"border: none; outline: none;\">아이디 찾기</button></div>\r\n");
      out.write("		    <div class=\"find_btn\" style=\"color:#ededed\">/</div>\r\n");
      out.write("		    <div class=\"find_btn\"><button type=\"button\" class=\"forgot\" id=\"Pfind\" target=\"_self\" style=\"border: none; outline: none;\">비밀번호 찾기</button></div>\r\n");
      out.write("	<a class=\"p-2\" href=\"https://kauth.kakao.com/oauth/authorize?client_id=f5f9425687ec5ab69784b8b04dc37b9c&redirect_uri=http://localhost:9680/WithTrip/kakao.me&response_type=code\">\r\n");
      out.write("		<img src=\"resources/images1/kakao_login_medium_narrow.png\" style=\"display:block; margin:auto;\" >\r\n");
      out.write("		</a>\r\n");
      out.write("	    </div>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("	  </div>\r\n");
      out.write("<!-- 	 	</form> -->\r\n");
      out.write("	  <div class=\"sub-cont\">\r\n");
      out.write("	    <div class=\"img\">\r\n");
      out.write("	      <div class=\"img__text m--up\">\r\n");
      out.write("	        <div style=\"color: #fff; font-size: 16px;\">내 취향에 딱 맞는 여행,</div>\r\n");
      out.write("	        <br>\r\n");
      out.write("	        <h2 style=\"color: #fff; font-family: 'Raleway', sans-serif;\">WITHTRIP</h2>\r\n");
      out.write("	        <!-- 여기 p태그였는데 제가 css먹여서 중앙정렬되길레 span태그로 바꿨어요!! \r\n");
      out.write("	        	p태그 중앙정렬되는거 이상하면 span태그로 바꾸시면 될 것 같아요! good! 화이팅 -->\r\n");
      out.write("	        	<br><br>\r\n");
      out.write("	        <h3 style=\"color: #fff; font-size: 16px;\">가입하고 <br> 동행을 구해보세요!</h3>\r\n");
      out.write("	      </div>\r\n");
      out.write("			      <div  class=\"img__text m--in\">\r\n");
      out.write("			        <h2 style=\"color: #fff; font-family: 'Raleway', sans-serif; font-size: 20px;\">You only life once</h2>\r\n");
      out.write("			        <br>\r\n");
      out.write("			        <h2 style=\"color: #fff; font-family: 'Raleway', sans-serif;\">WITHTRIP</h2>\r\n");
      out.write("			        <br>\r\n");
      out.write("					<div style=\"font-size: 16px;\">저희와<br> 동행하시겠습니까?</div>			        \r\n");
      out.write("			      </div>\r\n");
      out.write("			      <div class=\"img__btn\"><br>\r\n");
      out.write("			        <span class=\"m--up\">회원가입</span>\r\n");
      out.write("			        \r\n");
      out.write("			        <span class=\"m--in\">로그인</span>\r\n");
      out.write("			      </div>\r\n");
      out.write("			    </div>\r\n");
      out.write("			    \r\n");
      out.write("			    <div class=\"form sign-up\" style=\"overflow:auto; padding:15px;\">\r\n");
      out.write("			    \r\n");
      out.write("			      <div class=\"main1\" style=\"font-size:large; padding: 22px; margin-left:240px; color: black;\">회원가입<br></div>\r\n");
      out.write("			      \r\n");
      out.write("			      <form action=\"minsert.me\" method=\"post\" enctype=\"Multipart/form-data\"  onsubmit=\"return insertValidate()\">  \r\n");
      out.write("			      	\r\n");
      out.write("			      <div>\r\n");
      out.write("			     <div class=\"myProfile\" id=\"myProfile\" style=\" background: #cfcfcf;;  border-color: gray; width: 100px; height: 100px; margin-left: 250px; border-radius: 60px; cursor: pointer;\" >\r\n");
      out.write("			 <img src=\"resources/images1/678.png\" id=\"profile\" style=\" background: #cfcfcf;;  border-color: gray; width: 96px; height: 95px; margin-top:3px; margin-left:2px; margin-top:3px; border-radius: 55px;\">                              \r\n");
      out.write("			      </div>\r\n");
      out.write("			      </div>\r\n");
      out.write("			      \r\n");
      out.write("				<div id=\"profileArea\">\r\n");
      out.write("						<input type=\"file\" id=\"profileImg\" multiple=\"multiple\" name=\"uploadFile\" style=\"display : none\">\r\n");
      out.write("					</div>\r\n");
      out.write("         \r\n");
      out.write("              \r\n");
      out.write("  			\r\n");
      out.write("  			 <p class=\"p\">\r\n");
      out.write("             <input type=\"text\" name=\"email\" id=\"emailId\" autocomplete=\"off\" required >\r\n");
      out.write("              <label><span>EMAIL</span></label>\r\n");
      out.write("<!--                 <button type=\"button\" class=\"add\" target=\"_self\" style=\"border: none; outline: none;\" >아이디 중복확인</button> -->\r\n");
      out.write("                <span style=\"text-align: center;  padding-left: 80px; font-size: small;\" id=\"emResult\"></span>\r\n");
      out.write("            </p>\r\n");
      out.write("            <p class=\"p\">\r\n");
      out.write("              <input    type=\"text\" name=\"userName\" id=\"name\" maxlength=\"25\" autocomplete=\"off\" required >\r\n");
      out.write("              <label><span>NAME</span></label>\r\n");
      out.write("              <span style=\"text-align: center;  padding-left: 80px; font-size: small\" id=\"nameResult\"></span>\r\n");
      out.write("            </p>\r\n");
      out.write("           <p class=\"p\">\r\n");
      out.write("              <input type=\"password\" name=\"userPwd\" id=\"joinfPwd\" maxlength=\"25\" autocomplete=\"off\" required >\r\n");
      out.write("              <label><span>PASSWORD</span></label>\r\n");
      out.write("              <span style=\"text-align: center; padding-left: 30px; font-size: small\" id=\"pwResult0\"></span>\r\n");
      out.write("            </p>\r\n");
      out.write("            <p class=\"p\">\r\n");
      out.write("              <input type=\"password\" name=\"userPwd2\" id=\"joinfPwd2\" maxlength=\"25\" name=\"autocomplete=\"off\" required >\r\n");
      out.write("              <label><span>CHECK PASSWORD</span></label>\r\n");
      out.write("               <span style=\"text-align: center; padding-left: 100px; font-size: small\" id=\"pwResult1\"></span>\r\n");
      out.write("            </p>\r\n");
      out.write("          <p class=\"p\">\r\n");
      out.write("              <input type=\"text\" name=\"nickName\" id=\"nickName\" maxlength=\"25\" autocomplete=\"off\" required >\r\n");
      out.write("              <label><span>NICKNAME</span></label>\r\n");
      out.write("                <span style=\"padding-left: 70px; font-size: small;\" id=\"nickResult\"></span>\r\n");
      out.write("            </p>\r\n");
      out.write("           <p class=\"p\">\r\n");
      out.write("              <input type=\"text\" name=\"phone\" id=\"phone\" autocomplete=\"off\" onkeyup=\"addHypen(this);\" required >\r\n");
      out.write("              <label><span>PHONE</span></label>\r\n");
      out.write("              <span style=\"text-align: center; padding-left: 40px; font-size: small;\" id=\"phResult\"></span>\r\n");
      out.write("            </p>\r\n");
      out.write("            \r\n");
      out.write(" 		      <p class=\"p\">\r\n");
      out.write("			       <input type=\"text\" name=\"address1\" id=\"address_kakao\" placeholder=\"click!\" autocomplete=\"off\" required >\r\n");
      out.write("			       <label><span>ADDRESS</span></label>\r\n");
      out.write("		      </p>\r\n");
      out.write("		      <p class=\"p\">\r\n");
      out.write("			       <input type=\"text\" name=\"address_detail\" id=\"address\" autocomplete=\"off\" required >\r\n");
      out.write("			       <label><span>DETAIL_ADDRESS</span></label>\r\n");
      out.write("		    	</p>\r\n");
      out.write("		      	\r\n");
      out.write("	      	\r\n");
      out.write("	      		 <div class=\"custom-control custom-checkbox\" style=\"padding-left: 190px;\">\r\n");
      out.write("	            	<input type=\"checkbox\" class=\"custom-control-input\" id=\"aggrement\" required>\r\n");
      out.write("	            	<label class=\"custom-control-label\" for=\"aggrement\" style=\"padding-right: 40px;\" >개인정보 수집 및 이용에 동의</label>\r\n");
      out.write("	          	</div>		      	\r\n");
      out.write("	          	\r\n");
      out.write("			 <button type=\"submit\" class=\"submit\" style=\"font-size: small; border: none; background: rgb(140,175,242);\r\n");
      out.write("				background: linear-gradient(270deg, rgba(140,175,242,1) 15%, rgba(126,169,242,1) 38%, rgba(110,156,236,1) 61%); \r\n");
      out.write("				outline: none;\" ><span>가입하기<br></span></button>\r\n");
      out.write("			   </form>   \r\n");
      out.write("<!-- 			      <button type=\"button\" class=\"fb-btn\">Join with <span>kakao</span></button> -->\r\n");
      out.write("			    </div>\r\n");
      out.write("			  </div>\r\n");
      out.write("			</div>\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("<!-- <a href=\"https://dribbble.com/shots/3306190-Login-Registration-form\" target=\"_blank\" class=\"icon-link\"> -->\r\n");
      out.write("<!--   <img src=\"http://icons.iconarchive.com/icons/uiconstock/socialmedia/256/Dribbble-icon.png\"> -->\r\n");
      out.write("<!-- </a> -->\r\n");
      out.write("<!-- <a href=\"https://twitter.com/NikolayTalanov\" target=\"_blank\" class=\"icon-link icon-link--twitter\"> -->\r\n");
      out.write("<!--   <img src=\"https://cdn1.iconfinder.com/data/icons/logotypes/32/twitter-128.png\"> -->\r\n");
      out.write("<!-- </a> -->\r\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("	\r\n");
      out.write("	// 내용 작성 부분의 공간을 클릭할 때 파일 첨부 창이 뜨도록 설정하는 함수\r\n");
      out.write("	$(function(){\r\n");
      out.write("		$(\"#profileArea\").hide();\r\n");
      out.write("		\r\n");
      out.write("		$(\"#myProfile\").click(function(){\r\n");
      out.write("			$(\"#profileImg\").click();\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	// 파일을 첨부 했을 경우 미리 보기가 가능하도록 하는 함수 (이미지 미리보기)\r\n");
      out.write("    var sel_files = [];\r\n");
      out.write("	\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		$('#profileImg').on('change' , handleImgsFilesSelect);\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("    function handleImgsFilesSelect(e) {\r\n");
      out.write("        var files = e.target.files;\r\n");
      out.write("        var filesArr = Array.prototype.slice.call(files);\r\n");
      out.write("\r\n");
      out.write("        filesArr.forEach(function(f) {\r\n");
      out.write("            if(!f.type.match(\"image.*\")) {\r\n");
      out.write("                alert(\"jpg,jpeg,png,bmp 확장자만 가능합니다.\");\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            sel_files.push(f);\r\n");
      out.write("\r\n");
      out.write("            var reader = new FileReader();\r\n");
      out.write("            reader.onload = function(e) {\r\n");
      out.write("            \r\n");
      out.write("            	var imgTag = $('<img>');\r\n");
      out.write("            	imgTag.attr('class', 'img-fluid image');\r\n");
      out.write("            	imgTag.attr('src', e.target.result);\r\n");
      out.write("            	imgTag.css({'width' : '100%', 'height' : '100%', 'border-radius' : '30px'});\r\n");
      out.write("            	\r\n");
      out.write("            	$('#myProfile').html(imgTag);\r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("            reader.readAsDataURL(f);\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		document.querySelector('.img__btn').addEventListener('click', function() {\r\n");
      out.write("			  document.querySelector('.cont').classList.toggle('s--signup');\r\n");
      out.write("			});\r\n");
      out.write("		\r\n");
      out.write("		document.getElementById('Ifind').onclick = function(){\r\n");
      out.write("			window.open('findId.me', '아이디 찾기', 'width=590px, height=520px, resizable=no');\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		document.getElementById('Pfind').onclick = function(){\r\n");
      out.write("			window.open('findPwd.me', '비밀번호 찾기', 'width=580px, height=440px, resizable=no');\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	      \r\n");
      out.write("		/* 회원가입 영역 */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// < ID(이메일)  >\r\n");
      out.write("	/* 정규식(앞자리(숫자,영어대소문자),(-,.@)포함),뒤에 2,3글자여야 함)*/\r\n");
      out.write("	$(\"#emailId\").on('change paste keyup', function(){\r\n");
      out.write("		var email = $('#emailId').val().trim()\r\n");
      out.write("      	var regEmail = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/;\r\n");
      out.write("		if (regEmail.test(email) === true || email == ('')) {\r\n");
      out.write("			$('#emResult').text('');\r\n");
      out.write("      	}else {\r\n");
      out.write("      		$('#emResult').text(\"Email을 확인해 주세요.\").css('color', \"orangered\");\r\n");
      out.write("      		return false;\r\n");
      out.write("      	}\r\n");
      out.write("  	});\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	/* ID(중복확인) */\r\n");
      out.write("	var isUserble = false;   // id 중복 시 false, 사용 가능 시 true\r\n");
      out.write("	var isIdChecked = false;\r\n");
      out.write("	\r\n");
      out.write("	$('#emailId').on('keyup', function(){\r\n");
      out.write("		var emailId = $('#emailId').val().trim()\r\n");
      out.write("		\r\n");
      out.write("      		$.ajax({\r\n");
      out.write("      			url: 'dupId.me',\r\n");
      out.write("      			data: {id:emailId},\r\n");
      out.write("      			success: function(data){\r\n");
      out.write("      				console.log(data);\r\n");
      out.write("      				if(data == '0'){\r\n");
      out.write("						isUsable = true;\r\n");
      out.write("						isIdChecked = true;\r\n");
      out.write("					} else if(data = '1'){\r\n");
      out.write("						$('#emResult').text('이미 사용중인 Email입니다.').css('color', \"orangered\");\r\n");
      out.write("						$('#emailId').val('');\r\n");
      out.write("						isUsable = true;\r\n");
      out.write("						isIdCheked = false;\r\n");
      out.write("					}\r\n");
      out.write("				},\r\n");
      out.write("				error: function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("				}	\r\n");
      out.write("			});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		// < 비밀번호 > \r\n");
      out.write("		   /* 비밀번호 일치 확인 */\r\n");
      out.write("		   $('#joinfPwd2').on('change paste keyup', function(){\r\n");
      out.write("		      var password = $('#joinfPwd').val().trim()\r\n");
      out.write("		      var password2 = $('#joinfPwd2').val().trim()\r\n");
      out.write("		      if(password != (\"\") && password2 != (\"\") && password != password2){\r\n");
      out.write("		         $('#pwResult1').text('비밀번호 불일치').css('color' , 'orangered');\r\n");
      out.write("		         $(this).focus();\r\n");
      out.write("		         return false;\r\n");
      out.write("		      } else {\r\n");
      out.write("		         $('#pwResult1').text('')\r\n");
      out.write("		      }\r\n");
      out.write("		   });\r\n");
      out.write("		   \r\n");
      out.write("		   /* 정규식(8자리 이상의(영대소문자+특수문자+숫자)) */\r\n");
      out.write("		   $(\"#joinfPwd\").on('change paste keyup', function(){\r\n");
      out.write("		      var password = $('#joinfPwd').val().trim()\r\n");
      out.write("		       if(!/^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/.test(password) && password != (\"\")){            \r\n");
      out.write("		          $('#pwResult0').text('숫자+영문+특수문자 조합으로 8자리 이상').css('color' , 'orangered');\r\n");
      out.write("		           return false;\r\n");
      out.write("		        } else {\r\n");
      out.write("		         $('#pwResult0').text('')\r\n");
      out.write("		       }        \r\n");
      out.write("		    return true;\r\n");
      out.write("		   });    \r\n");
      out.write("		   \r\n");
      out.write("		   \r\n");
      out.write("		// < 닉네임 >\r\n");
      out.write("		   /* 정규식 한글, 영문, 특수문자 (- _ .) 포함한 2 ~ 12글자 닉네임 */\r\n");
      out.write("		   $('#nickName').on('change paste keyup', function(){\r\n");
      out.write("		      var nickname = $('#nickName').val().trim()\r\n");
      out.write("		      if (!/^[a-zA-Zㄱ-힣0-9-_.]{2,12}$/.test(nickname) || nickname ==('')){\r\n");
      out.write("		    	  $('#nickResult').text('한글,영어,숫자,-_ 조화롭게 사용').css('color', \"orangered\"); \r\n");
      out.write("		         return false;\r\n");
      out.write("		      }else{\r\n");
      out.write("		         $('#nickResult').text('');\r\n");
      out.write("		      }\r\n");
      out.write("		   });\r\n");
      out.write("		      \r\n");
      out.write("		   /* 닉네임(중복확인) */\r\n");
      out.write("		   var isUserble = false;   // id 중복 시 false, 사용 가능 시 true\r\n");
      out.write("		   var isNiChecked = false;\r\n");
      out.write("		   \r\n");
      out.write("		   $('#nickName').on('keyup', function(){\r\n");
      out.write("		      var nickName = $('#nickName').val().trim()\r\n");
      out.write("		            $.ajax({\r\n");
      out.write("		               url: 'dupNick.me',\r\n");
      out.write("		               data: {nickName:nickName},\r\n");
      out.write("		               success: function(data){\r\n");
      out.write("		                  console.log(data);\r\n");
      out.write("		                  if(data == '0'){\r\n");
      out.write("		                     isUserble = true;\r\n");
      out.write("		                  isNiChecked = true;\r\n");
      out.write("		               } else if(data = '1'){\r\n");
      out.write("		                  $('#nickResult').text(\"이미 사용중인 '닉네임'입니다.\").css('color', \"orangered\");\r\n");
      out.write("		                  isUserble = true;\r\n");
      out.write("		                  isNiChecked = false;\r\n");
      out.write("		               }\r\n");
      out.write("		            },\r\n");
      out.write("		            error: function(data){\r\n");
      out.write("		               console.log(data);\r\n");
      out.write("		            }   \r\n");
      out.write("		         });\r\n");
      out.write("		   });\r\n");
      out.write("		   \r\n");
      out.write("		   \r\n");
      out.write("		   \r\n");
      out.write("		   function insertValidate(){\r\n");
      out.write("		      if(isUserble && isNiChecked){\r\n");
      out.write("		         return true;\r\n");
      out.write("		      } else{\r\n");
      out.write("		         alert('닉네임 중복확인을 해주세요');\r\n");
      out.write("		         return false;\r\n");
      out.write("		      }\r\n");
      out.write("		   }\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		// < 이름 >\r\n");
      out.write("		   /* 정규식(한글,영어만 사용가능) */\r\n");
      out.write("		   $('#name').on('change paste keyup', function(){\r\n");
      out.write("		      var userName = $('#name').val().trim();\r\n");
      out.write("		      var regex = /^[가-힣a-zA-Z]+$/;\r\n");
      out.write("		      \r\n");
      out.write("		      if(regex.test(userName) || userName ==('')) {\r\n");
      out.write("		         $('#nameResult').text('');\r\n");
      out.write("		         // $(this).val('');\r\n");
      out.write("		         $(this).focus();\r\n");
      out.write("		   \r\n");
      out.write("		         return false;\r\n");
      out.write("		      } else {\r\n");
      out.write("		         $('#nameResult').text('이름을 확인해주세요.').css('color' , 'orangered');\r\n");
      out.write("		      }\r\n");
      out.write("		   });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		// < 연락처 > \r\n");
      out.write("		   /* 정규식(010-xxxx-xxxx 양식 '-' 사용가능) */\r\n");
      out.write("		   $(\"#phone\").on('change paste keyup', function(){\r\n");
      out.write("		      var phone = $('#phone').val().trim();\r\n");
      out.write("		      var regPhone = /^01([0|1|6|7|8|9])-([0-9]{3,4})-([0-9]{4})$/;\r\n");
      out.write("		      if (regPhone.test(phone) === false || phone == ('')) {\r\n");
      out.write("		         $('#phResult').text(\"010-xxx-xxxx와 같이 '-' 을 넣어 작성\").css('color', \"orangered\");\r\n");
      out.write("		         return false;\r\n");
      out.write("		      }else {\r\n");
      out.write("		         $('#phResult').text('');\r\n");
      out.write("		         return true;\r\n");
      out.write("		      }\r\n");
      out.write("		   });\r\n");
      out.write("		   \r\n");
      out.write("			function addHypen(obj) {\r\n");
      out.write("	   			var number = obj.value.replace(/[^0-9]/g, \"\");\r\n");
      out.write("	   			var phone = \"\";\r\n");
      out.write("	   			\r\n");
      out.write("	   		  if(number.length < 4) {\r\n");
      out.write("	   	        return number;\r\n");
      out.write("	   	    } else if(number.length < 7) {\r\n");
      out.write("	   	        phone += number.substr(0, 3);\r\n");
      out.write("	   	        phone += \"-\";\r\n");
      out.write("	   	        phone += number.substr(3);\r\n");
      out.write("	   	    } else if(number.length < 11) {\r\n");
      out.write("	   	        phone += number.substr(0, 3);\r\n");
      out.write("	   	        phone += \"-\";\r\n");
      out.write("	   	        phone += number.substr(3, 3);\r\n");
      out.write("	   	        phone += \"-\";\r\n");
      out.write("	   	        phone += number.substr(6);\r\n");
      out.write("	   	    } else {\r\n");
      out.write("	   	        phone += number.substr(0, 3);\r\n");
      out.write("	   	        phone += \"-\";\r\n");
      out.write("	   	        phone += number.substr(3, 4);\r\n");
      out.write("	   	        phone += \"-\";\r\n");
      out.write("	   	        phone += number.substr(7);\r\n");
      out.write("	   	    }\r\n");
      out.write("	   	    obj.value = phone;\r\n");
      out.write("	   	}\r\n");
      out.write("			\r\n");
      out.write("			//< 카카오 지도(API) >\r\n");
      out.write("			window.onload = function(){\r\n");
      out.write("			    document.getElementById(\"address_kakao\").addEventListener(\"click\", function(){ //주소입력칸을 클릭하면\r\n");
      out.write("			        //카카오 지도 발생\r\n");
      out.write("			        new daum.Postcode({\r\n");
      out.write("			            oncomplete: function(data) { //선택시 입력값 세팅\r\n");
      out.write("			                document.getElementById(\"address_kakao\").value = data.address; // 주소 넣기\r\n");
      out.write("			                document.querySelector(\"input[name=address_detail]\").focus(); //상세입력 포커싱\r\n");
      out.write("			            }\r\n");
      out.write("			        }).open();\r\n");
      out.write("			    });\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("		function login() {\r\n");
      out.write("			var email = $(\"#email1\").val();\r\n");
      out.write("			var userPwd = $(\"#userPwd\").val();\r\n");
      out.write("// 			console.log(email);\r\n");
      out.write("// 			console.log(userPwd);\r\n");
      out.write("			\r\n");
      out.write("			if(email.trim() == '') {\r\n");
      out.write("				alert('아이디를 입력하세요.');\r\n");
      out.write("			} else if(userPwd.trim() == '') {\r\n");
      out.write("				alert('비밀번호를 입력하세요.');\r\n");
      out.write("			} else {\r\n");
      out.write("				\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url: 'login.me',\r\n");
      out.write("					type: \"post\",\r\n");
      out.write("					data: {email:email, userPwd:userPwd},\r\n");
      out.write("					success: function(data){\r\n");
      out.write("						console.log(data);\r\n");
      out.write("						if(data == 'false'){\r\n");
      out.write("							alert('존재하지 않는 회원입니다.');\r\n");
      out.write("						} else {\r\n");
      out.write("							location.href = 'home.do';\r\n");
      out.write("						}\r\n");
      out.write("						\r\n");
      out.write("					},\r\n");
      out.write("					error: function(data){\r\n");
      out.write("						console.log(data);\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("	   		\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- footer -->\r\n");
      if (_jspx_meth_c_005fimport_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fimport_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f0 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f0_reused = false;
    try {
      _jspx_th_c_005fimport_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f0.setParent(null);
      // /WEB-INF/views/member/login.jsp(20,0) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f0.setUrl("../common/navbar.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f0 = _jspx_th_c_005fimport_005f0.doStartTag();
        if (_jspx_th_c_005fimport_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f0);
      _jspx_th_c_005fimport_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fimport_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f1 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f1_reused = false;
    try {
      _jspx_th_c_005fimport_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f1.setParent(null);
      // /WEB-INF/views/member/login.jsp(468,0) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f1.setUrl("../common/footer.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f1 = _jspx_th_c_005fimport_005f1.doStartTag();
        if (_jspx_th_c_005fimport_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f1);
      _jspx_th_c_005fimport_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f1_reused);
    }
    return false;
  }
}
